"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};lab.factory("beforeUnload",function($rootScope,$window,$location){return $window.onbeforeunload=function(e){var confirmation={};if($rootScope.$broadcast("onBeforeUnload",confirmation).defaultPrevented)return confirmation.message},$window.onunload=function(){$rootScope.$broadcast("onUnload")},{}}),lab.factory("initExperiment",function($rootScope,modelExperimentService,genericService,initGeomService,modelSolidService,modelSourceService){function getExperiment(){var experiment=angular.copy(modelExperimentService.getExperiment()),initDataList=genericService.getInitPhysicsList();experiment.physicsLib=initDataList.physicsList[0].lib;var initGeomData=initGeomService.getInitGeom(),electricField=angular.copy(initGeomData.electricField),magneticField=angular.copy(initGeomData.magneticField),localMagnetic=angular.copy(initGeomData.magneticField);experiment.emField.electric=electricField,experiment.emField.magnetic=magneticField,experiment.localField.magnetic=localMagnetic;var materials=angular.copy(modelSolidService.getMaterialList()),solidList=angular.copy(modelSolidService.getModelSolid()),posrot=angular.copy(initGeomData.posrot),labMaterialType=materials[2].materialType,labMaterial=materials[2].materialList[4],labSolid=solidList[0];for(var d in labSolid.dimensions)labSolid.dimensions[d].value=100;var labRoom={name:"LabRoom",solid:labSolid,materialType:labMaterialType,material:labMaterial,isWorld:!0,isParam:!1,position:posrot.position,rotation:posrot.rotation};experiment.geometry.volumeList.push(labRoom);var particleList=modelSourceService.getParticleList(),others=particleList.particles.others,geantino=_.find(others,function(p){return"Geantino"===p.particleName}),source={name:"particleExample",type:"particles",particleType:"others",particle:geantino,distributions:{}},distributionList=modelSourceService.getDistributionList(),enerDist=_.find(distributionList,function(d){return"Energy"===d.distributionType}),posDist=_.find(distributionList,function(d){return"Position"===d.distributionType}),dirDist=_.find(distributionList,function(d){return"Direction"===d.distributionType}),timeDist=_.find(distributionList,function(d){return"Time"===d.distributionType});return source.distributions.Energy=enerDist.distributions[0],source.distributions.Position=posDist.distributions[0],source.distributions.Direction=dirDist.distributions[0],source.distributions.Time=timeDist.distributions[0],experiment.sourceList.push(source),experiment}var initGlobal=function(){return{isValidAll:!0,isValidExperiment:{isValidFolder:!0,isValidEMField:!0,isValidLocalField:!0,isValidVolumes:!0,isValidSources:!0,isValidActions:!0,isValidScorers:!0,isValidFilters:!0,isValidBeams:!0,isValidPythiaProcess:!0,isValidPythiaBeam:!0},isSaved:!1,showSummary:!1,isMongo:!1,okRunExperiment:!1,maxBeams:null,maxLength:20,termData:{pid:null,term:null,initTerm:!0,isActive:!1}}};return{getExperiment:getExperiment,getHistograms:function(){return{summary:{partCount:[],procCount:[],procCreator:[]},actionHistograms:[],scorerHistograms:[],pythiaTree:null,pythiaHistograms:[]}},initGlobal:initGlobal}}),lab.factory("socket",function(){return io.connect()}),lab.factory("utilities",function(){var generateName=function(list,type){var name="";if(void 0!==list){var n=0,subName=void 0;subName="experiment"===type?"myExperiment":"volume"===type?"myVolume":"source"===type?"mySource":"action"===type?"myGAMOSData":"scorer"===type?"myScorer":"filter"===type?"myFilter":"other",name=subName+n;var find=!1,pos=_.findKey(list,{name:name});for(void 0!==pos&&(find=!0);find;){n++,name=subName+n;find=void 0!==_.findKey(list,{name:name})}}else name="other";return name},getElementList=function(data,elementType,elementList){for(var list=[],i=0;i<elementList.length;i++)data[elementType].indexOf(elementList[i])<0&&list.push(elementList[i]);return list},delElement=function(data,elementId,elementType){data[elementType].splice(elementId,1)};return{generateName:generateName,getElementList:getElementList,addElement:function(data,element,elementType){data[elementType].indexOf(element)<0&&data[elementType].push(element)},delElement:delElement,getFuncTotal:function(funcList){for(var funcTotal="",par=0,i=0;i<funcList.length;i++){var func=funcList[i].charAt(0);if("g"===func&&(funcTotal+="["+par+"]e<sup><sup>-1</sup>&frasl;<sub>2</sub>((x-["+(par+1)+"])/["+(par+2)+"])<sup>2</sup></sup>",par+=3),"e"===func&&(funcTotal+="e<sup>(["+par+"]+["+(par+1)+"]x)</sup>",par+=2),"p"===func){for(var grade=Number(funcList[i].slice(3)),polPar=par,polText="["+polPar+"]+",ii=1;ii<=grade;ii++)polPar+=1,polText+="["+polPar+"]x<sup>"+ii+"</sup>",ii<grade&&(polText+="+");funcTotal+=polText,par+=grade+1}"l"===func&&(funcTotal+="["+par+"]*Landau(["+(par+1)+"],["+(par+2)+"])",par+=3),i<funcList.length-1&&(funcTotal+="+")}return funcTotal},getParticleName:function(searchKey,key,particleList){var pA=void 0;for(var particleType in particleList)if(void 0!==(pA=_.find(particleList[particleType],function(p){return p[searchKey]===key})))break;return pA.particleName},buildPlotly:function(element,width,height){var d3=Plotly.d3,WIDTH_IN_PERCENT_OF_PARENT=width,HEIGHT_IN_PERCENT_OF_PARENT=height;return d3.select(element[0]).append("div").style({width:WIDTH_IN_PERCENT_OF_PARENT+"%","margin-left":(100-WIDTH_IN_PERCENT_OF_PARENT)/2+"%",height:HEIGHT_IN_PERCENT_OF_PARENT+"vh","margin-top":(100-HEIGHT_IN_PERCENT_OF_PARENT)/2+"vh"}).node()}}}),lab.factory("validate",function(errorListService){function validateValue(type,value){var isValid=!0;return!Number.isNaN(value)&&Number.isFinite(value)?("Length"!==type&&"Delta"!==type&&"Life time"!==type||value<=0&&(isValid=!1),"Pseudorapidity"!==type&&"Radius"!==type&&"Energy"!==type&&"Time"!==type&&"Activity"!==type&&"Excitation energy"!==type&&"Momentum"!==type||value<0&&(isValid=!1),"Ncopies"!==type&&"Mass number"!==type&&"nBeams"!==type&&"Counter"!==type&&"Grade"!==type||(isValid=Number.isInteger(value),isValid="Counter"===type||"Grade"===type?isValid&&value>=0:isValid&&value>0,"nBeams"===type&&value>Number.MAX_SAFE_INTEGER&&(isValid=!1)),"Opacity"===type&&(isValid=value>=0&&value<=1)):isValid=!1,isValid}function validateVolume(volume){var isValidPosition={},isValidRotation={};for(var coord in volume.position){var isValid=validateValue(volume.position[coord].type,volume.position[coord].value);isValidPosition[coord]=isValid}for(var coord in volume.rotation){var isValid=validateValue(volume.rotation[coord].type,volume.rotation[coord].value);isValidRotation[coord]=isValid}return{isValidPosition:isValidPosition,isValidRotation:isValidRotation,isValidOpacity:validateValue("Opacity",volume.opacity)}}function validateSource(source){var isValidSource={},isValidDistribution={};isValidDistribution.errorDist={};var errorList=[],errorType=null,minEnergy=null,maxEnergy=null;for(var d in source.distributions)if(isValidDistribution.errorDist[d]={},null!==source.distributions[d])for(var p in source.distributions[d].parameters){var parameter=source.distributions[d].parameters[p],valueType=parameter.type,isValid=!0;"volume"!==p?(isValid=isValid&&validateValue(valueType,parameter.value),isValidDistribution.errorDist[d][p]=isValid):(isValid=isValid&&null!==parameter.value&&parameter.value.length>0,isValidDistribution.errorDist[d][p]=isValid,valueType="Volume"),errorType=valueType,!isValid&&errorList.indexOf(errorType)<0&&errorList.push(errorType),"Random flat energy"===source.distributions[d].type&&isValid&&(minEnergy=source.distributions[d].parameters["min. energy"].value,maxEnergy=source.distributions[d].parameters["max. energy"].value)}null!==minEnergy&&null!==maxEnergy&&(errorType="energyRange",minEnergy>=maxEnergy&&errorList.indexOf(errorType)<0&&(isValidDistribution.errorDist.Energy={"min. energy":!1,"max. energy":!1},errorList.push(errorType)));for(var errorMessages=[],i=0;i<errorList.length;i++)errorMessages.push(errorMessageList[errorList[i]]);if(isValidDistribution.errorMessages=errorMessages,isValidSource.isValidDistribution=isValidDistribution,"isotopes"===source.type){var isValidIsotope={};isValidIsotope.errorIsotope={};var errorList=[];for(var parameter in source.particle.parameters){var isValid=!0;"Atomic number"!=parameter&&(valueType=parameter,isValid=isValid&&validateValue(valueType,source.particle.parameters[parameter].value),isValidIsotope.errorIsotope[valueType]=isValid,errorType=valueType,!isValid&&errorList.indexOf(errorType)<0&&errorList.push(errorType))}if(source.particle.parameters["Mass number"].value<source.particle.parameters["Atomic number"].value){isValid=!1,isValidIsotope.errorIsotope["Mass number"]=isValid;var errorType="Atomic number";!isValid&&errorList.indexOf(errorType)<0&&errorList.push(errorType)}for(var errorMessages=[],i=0;i<errorList.length;i++)errorMessages.push(errorMessageList[errorList[i]]);isValidIsotope.errorMessages=errorMessages,isValidSource.isValidIsotope=isValidIsotope}else delete isValidSource.isValidIsotope;if("GAMOS isotopes"===source.type){var isValidGamosIsotope={};isValidGamosIsotope.errorGamosIsotope={};var errorList=[];for(var parameter in source.particle.parameters){var isValid=!0;valueType=parameter,isValid=isValid&&validateValue(valueType,source.particle.parameters[parameter].value),isValidGamosIsotope.errorGamosIsotope[valueType]=isValid,errorType=valueType,!isValid&&errorList.indexOf(errorType)<0&&errorList.push(errorType)}for(var errorMessages=[],i=0;i<errorList.length;i++)errorMessages.push(errorMessageList[errorList[i]]);isValidGamosIsotope.errorMessages=errorMessages,isValidSource.isValidGamosIsotope=isValidGamosIsotope}else delete isValidSource.isValidGamosIsotope;return isValidSource}function validateParamFilter(parameters){for(var isValidParameters=[],i=0;i<parameters.length;i++){var param=parameters[i],isValidParam={},isValid=!0;if("selectParticle"===param.paramType||"selectProcess"===param.paramType||"selectFlux"===param.paramType?(null===param.value&&(isValid=!1),isValidParam.isValid=isValid):(isValid=validateValue(param.paramType,param.value),isValidParam.isValid=isValid),isValidParam.errorMessages=[],!isValid){var error=errorMessageList[param.paramType];isValidParam.errorMessages.push(error)}isValidParameters.push(isValidParam)}return isValidParameters}function validateHistogram(data){for(var limits=data.limits,nBins=data.nbins,dataType=data.type,isValidLimit=[],i=0;i<limits.length;i++){var isValid={},errorMessages=[];isValid.isValid=validateValue(dataType,limits[i]),isValid.isValid||(errorMessages.push(errorMessageList[dataType]),isValid.errorMessages=errorMessages),isValidLimit.push(isValid)}if(isValidLimit[0].isValid&&isValidLimit[1].isValid&&limits[0]>=limits[1]){isValidLimit=[],isValid.isValid=!1,isValid.errorMessages=[],isValidLimit=[isValid,isValid];isValidLimit[0].errorMessages.push(errorMessageList.minmax)}var isValidNbins={},errorMessages=[],isValid=!Number.isNaN(nBins)&&Number.isFinite(nBins)&&nBins===parseInt(nBins,10)&&nBins>0;return isValidNbins.isValid=isValid,isValidNbins.isValid||(errorMessages.push(errorMessageList.nbins),isValidNbins.errorMessages=errorMessages),{isValidNbins:isValidNbins,isValidLimit:isValidLimit}}function validateLayerScorer(layer,maxLayer){var isValidLayer={},errorMessages=[],isValid=!Number.isNaN(layer)&&Number.isFinite(layer)&&layer===parseInt(layer,10)&&layer>0&&layer<=maxLayer;return isValidLayer.isValid=isValid,isValidLayer.isValid||(errorMessages.push(errorMessageList.layer),isValidLayer.errorMessages=errorMessages),isValidLayer}function validateBeams(nBeams,maxBeams){var isValidBeams={};return isValidBeams.isValid=!0,isValidBeams.isValid=validateValue("nBeams",nBeams),isValidBeams.isValid?nBeams>maxBeams&&(isValidBeams.isValid=!1,isValidBeams.errorMessages=errorMessageList.nBeams):isValidBeams.errorMessages=errorMessageList.nBeams,isValidBeams}function validatePythia(energy){var isValidEnergy={isValidCM:!0,isValidEA:!0,isValidEB:!0,errorMessages:[]};if(2===energy.frame.option?(isValidEnergy.isValidEA=validateValue("Energy",energy.eA),isValidEnergy.isValidEB=validateValue("Energy",energy.eB)):isValidEnergy.isValidCM=validateValue("Energy",energy.eCM)&&energy.eCM>=10,!isValidEnergy.isValidEA||!isValidEnergy.isValidEB||!isValidEnergy.isValidCM){var errorMessages=errorMessageList.errorPythiaEnergy;isValidEnergy.errorMessages.push(errorMessages)}return isValidEnergy}function validateParameterisation(parameters){var isValidParameterisation={};for(var param in parameters){var isValidParameter={};if(isValidParameter.isValid=validateValue(parameters[param].type,parameters[param].value),!isValidParameter.isValid){var errorMessages=errorMessageList[param];isValidParameter.errorMessages=errorMessages}isValidParameterisation[param]=isValidParameter}return isValidParameterisation}function validateField(fieldType,field){var isValidField={};if(void 0===field)isValidField={isValid:!1,errorMessages:errorMessageList[fieldType]};else for(var c in field){var isValid=validateValue(field[c].type,field[c].value),isValidComponent={isValid:isValid};isValid||(isValidComponent.errorMessages=errorMessageList[fieldType]),isValidField[c]=isValidComponent}return isValidField}var errorMessageList=errorListService.getErrorList();return{validateValue:validateValue,validateName:function(list,name,id,maxLength,nameType){var isValidName={},isRepeated=!1,isValidChar=!0,validChar=/^[a-zA-Z\d]*$/;if(void 0!==name&&null!==name){for(var pos=0;!isRepeated&&pos<list.length;){var vName=list[pos].name;id!==pos&&vName===name?isRepeated=!0:pos++}var isValidLen=name.length>0;isValidChar="experimentName"!==nameType?isValidLen&&validChar.test(name)&&name.length<=maxLength:isValidLen}else isValidChar=!1;return isValidName.isValid=!isRepeated&&isValidChar,isRepeated&&(isValidName.errorMessages=errorMessageList.RepeatedName),isValidChar||(isValidName.errorMessages=errorMessageList.ValidCharName),isValidName},validateText:function(text,maxLength){var isValidText={},isValidLength=!0;return void 0!==text&&null!==text&&(isValidLength=text.length<=maxLength),isValidText.isValid=isValidLength,isValidLength||(isValidText.errorMessages=errorMessageList.ValidText),isValidText},validateDimensions:function(volume){var isValidSolid={};isValidSolid.dimensions={},isValidSolid.errorMessages=[];var valueType,errorList=[];for(var key in volume.solid.dimensions)isValidSolid.dimensions[key]=!0;if("BOX"===volume.solid.solidType){var valueType=volume.solid.dimensions[key].type;for(var key in volume.solid.dimensions)isValidSolid.dimensions[key]=validateValue(valueType,volume.solid.dimensions[key].value),!isValidSolid.dimensions[key]&&errorList.indexOf(valueType)<0&&errorList.push(valueType)}if("SPHERE"===volume.solid.solidType)for(var key in volume.solid.dimensions){var valueType=volume.solid.dimensions[key].type;if(validateValue(valueType,volume.solid.dimensions[key].value)){var errorType=null,innerKey="Inner radius",outerKey="Outer radius";volume.solid.dimensions[innerKey].value>=volume.solid.dimensions[outerKey].value&&(isValidSolid.dimensions[innerKey]=isValidSolid[outerKey]=!1,errorType="innerouter",errorList.indexOf(errorType)<0&&errorList.push(errorType)),volume.solid.dimensions["Delta phi"].value>360&&(isValidSolid.dimensions["Delta phi"]=!1,errorType="phiLength"),volume.solid.dimensions["Starting theta"].value>=180&&(isValidSolid.dimensions["Starting theta"]=!1,errorType="startLength"),volume.solid.dimensions["Delta theta"].value>180&&(isValidSolid.dimensions["Delta theta"]=!1,errorType="thetaLength"),null!==errorType&&errorList.indexOf(errorType)<0&&errorList.push(errorType)}else isValidSolid.dimensions[key]=!1,errorList.indexOf(valueType)<0&&errorList.push(valueType)}if("TUBE"===volume.solid.solidType)for(var key in volume.solid.dimensions){var valueType=volume.solid.dimensions[key].type;if(validateValue(valueType,volume.solid.dimensions[key].value)){var errorType=null,innerKey="Inner radius",outerKey="Outer radius";volume.solid.dimensions[innerKey].value>=volume.solid.dimensions[outerKey].value&&(isValidSolid.dimensions[innerKey]=isValidSolid[outerKey]=!1,errorType="innerouter"),null!==errorType&&errorList.indexOf(errorType)<0&&errorList.push(errorType)}else isValidSolid.dimensions[key]=!1,errorList.indexOf(valueType)<0&&errorList.push(valueType)}if("TUBS"===volume.solid.solidType)for(var key in volume.solid.dimensions){var valueType=volume.solid.dimensions[key].type;if(validateValue(valueType,volume.solid.dimensions[key].value)){var errorType=null,innerKey="Inner radius",outerKey="Outer radius";volume.solid.dimensions[innerKey].value>=volume.solid.dimensions[outerKey].value&&(isValidSolid.dimensions[innerKey]=isValidSolid[outerKey]=!1,errorType="innerouter");var deltaKey="Delta phi";volume.solid.dimensions[deltaKey].value>360&&(isValidSolid.dimensions[deltaKey]=!1,errorType="phiLength"),null!==errorType&&errorList.indexOf(errorType)<0&&errorList.push(errorType)}else isValidSolid.dimensions[key]=!1,errorList.indexOf(valueType)<0&&errorList.push(valueType)}if("CONS"===volume.solid.solidType)for(var key in volume.solid.dimensions){var valueType=volume.solid.dimensions[key].type;if(validateValue(valueType,volume.solid.dimensions[key].value)){var errorType=null;volume.solid.dimensions["Inner radius up"].value>=volume.solid.dimensions["Outer radius up"].value&&(isValidSolid.dimensions["Inner radius up"]=isValidSolid.dimensions["Outer radius up"]=!1,errorType="innerouter"),volume.solid.dimensions["Inner radius down"].value>volume.solid.dimensions["Outer radius down"].value&&(isValidSolid.dimensions["Inner radius down"]=isValidSolid.dimensions["Outer radius down"]=!1,errorType="innerouter");var deltaKey="Delta phi";volume.solid.dimensions[deltaKey].value>360&&(isValidSolid.dimensions[deltaKey]=!1,errorType="phiLength"),null!==errorType&&errorList.indexOf(errorType)<0&&errorList.push(errorType)}else isValidSolid.dimensions[key]=!1,errorList.indexOf(valueType)<0&&errorList.push(valueType)}for(var errorMessages=[],i=0;i<errorList.length;i++)errorMessages.push(errorMessageList[errorList[i]]);return isValidSolid.errorMessages=errorMessages,isValidSolid},validateParameterisation:validateParameterisation,validateField:validateField,validateSource:validateSource,validateVolume:validateVolume,validateHistogram:validateHistogram,validateBeams:validateBeams,validateParamFilter:validateParamFilter,validateRangeFit:function(xMin,xMax,min,max,histogramType){var isvalidMin=!Number.isNaN(xMin)&&Number.isFinite(xMin)&&xMin<=xMax&&xMin<=max,isvalidMax=!Number.isNaN(xMax)&&Number.isFinite(xMax)&&xMax>=xMin&&xMax>=min;return isvalidMin=isvalidMin&&xMin>=min,isvalidMax=isvalidMax&&xMax<=max,{min:isvalidMin,max:isvalidMax}},validateGrade:function(grade){var isValid=validateValue("Grade",grade),isValidGrade={isValid:isValid,errorList:[]};return isValid||isValidGrade.errorList.push(errorMessageList.Grade),isValidGrade},validateLayerScorer:validateLayerScorer,validatePythia:validatePythia}}),lab.factory("validateExpJSON",function(validate,genericService,initGeomService,initDataService,modelSolidService,modelSourceService,initExperiment,errorListService){function validateExperiment(exp){var errorList=errorListService.getErrorList(),isValidExperiment={elementList:{},errorList:[]};isValidExperiment.elementList.isValidJSONFormat=!0;var expJSON=null;try{expJSON=JSON.parse(exp)}catch(e){isValidExperiment.elementList.isValidJSONFormat=!1,isValidExperiment.errorList.push(errorList.errorJSONFormat)}return isValidExperiment.elementList.isValidJSONFormat&&(isValidExperiment=validateExpJSON(expJSON,errorList)),isValidExperiment}function validateExpJSON(expJSON,errorList){var errorMessageList=[],isValidAll={elementList:{},errorList:[]},isValidName=validate.validateName([],expJSON.name,null,null,"experimentName");isValidAll.elementList.isValidName=isValidName.isValid,isValidAll.elementList.isValidName||errorMessageList.push(errorList.experimentName),"boolean"!=typeof expJSON.isVisualization&&(isValidAll.elementList.isValidVisualization=!1,errorMessageList.push(errorList.visualizationError)),("string"!=typeof expJSON.macroFile||expJSON.macroFile.length<=0)&&(isValidAll.elementList.isValidMacroFile=!1,errorMessageList.push(errorList.macroFileError)),("string"!=typeof expJSON.geomFile||expJSON.geomFile.length<=0)&&(isValidAll.elementList.isValidGeomFile=!1,errorMessageList.push(errorList.geomFileError)),isValidAll.elementList.isValidPhysicsLib=!0;var myDataList=genericService.getInitPhysicsList(),myPhysicsList=myDataList.physicsList,physics=_.map(myPhysicsList,"lib");if("string"!=typeof expJSON.physicsLib?isValidAll.elementList.isValidPhycicsLib=!1:physics.indexOf(expJSON.physicsLib)<0&&(isValidAll.elementList.isValidPhysicsLib=!1),isValidAll.elementList.isValidPhysicsLib||errorMessageList.push(errorList.physicsListError),isValidAll.elementList.isValidProcessRemove=!0,Array.isArray(expJSON.processRemove)&&isValidAll.elementList.isValidPhysicsLib){var myphysics=_.find(myPhysicsList,function(physics){return physics.lib===expJSON.physicsLib});expJSON.processRemove.forEach(function(process){if(myphysics.processList.indexOf(process)<0)return void(isValidAll.elementList.isValidProcessRemove=!1)})}else isValidAll.elementList.isValidProcessRemove=!1;isValidAll.elementList.isValidProcessRemove||errorMessageList.push(errorList.processListError);var emField=expJSON.emField,initGeomData=initGeomService.getInitGeom(),modelElectricField=angular.copy(initGeomData.electricField),modelMagneticField=angular.copy(initGeomData.magneticField);if("object"===(void 0===emField?"undefined":_typeof(emField))){var magnetic=(expJSON.emField.electric,expJSON.emField.magnetic),isValidElectricField=validateElement(expJSON.emField.electric,modelElectricField),isValidMagneticField=validateElement(expJSON.emField.magnetic,modelMagneticField);isValidAll.elementList.isValidEMField=isValidElectricField&&isValidMagneticField}else isValidAll.elementList.isValidEMField=!1,errorMessageList.push(errorList.emFieldError);var localField=expJSON.localField;if("object"===(void 0===localField?"undefined":_typeof(localField))){var magnetic=localField.magnetic;isValidAll.elementList.isValidLocalField=validateElement(magnetic,modelMagneticField)}else isValidAll.elementList.isValidLocalField=!1,errorMessageList.push(errorList.Magnetic);var solidList=angular.copy(modelSolidService.getModelSolid()),posrot=angular.copy(initGeomData.posrot),materialModelList=(_.map(solidList,"solidType"),angular.copy(modelSolidService.getMaterialList()));if(isValidAll.elementList.isValidVolumeList=!0,"object"!==_typeof(expJSON.geometry))isValidAll.elementList.isValidVolumeList=!1,errorMessageList.push(errorList.errorVolumeList),errorMessageList.push(errorList.sourceListError);else{var volumeList=expJSON.geometry.volumeList;if(!Array.isArray(volumeList)||volumeList.length<=0)isValidAll.elementList.isValidVolumeList=!1;else{for(var i=0;i<volumeList.length;i++){if("object"!==_typeof(volumeList[i])){isValidAll.elementList.isValidVolumeList=!1;break}isValidAll.elementList.isValidVolumeList=validateVolumeObject(solidList,posrot,materialModelList,volumeList[i])}void 0===_.find(volumeList,function(v){return!0===v.isWorld})&&(isValidAll.elementList.isValidVolumeList=!1)}if(isValidAll.elementList.isValidVolumeList||errorMessageList.push(errorList.errorVolumeList),!expJSON.isPythia){var particleModelList=angular.copy(modelSourceService.getParticleList()),typeList=Object.keys(particleModelList);isValidAll.elementList.isValidSourceList=!0;var sourceList=expJSON.geometry.sourceList;if(!Array.isArray(sourceList)||sourceList.length<=0)isValidAll.elementList.isValidSourceList=!1;else for(var i=0;i<sourceList.length;i++){var source=sourceList[i],isValidName=validate.validateName(sourceList,source.name,i,20,"source");if(!isValidName.isValid){isValidAll.elementList.isValidSourceList=!1;break}if(typeList.indexOf(source.type)<0){isValidAll.elementList.isValidSourceList=!1;break}var particleTypeList;if("particles"===source.type&&(particleTypeList=Object.keys(particleModelList[source.type]),particleTypeList.indexOf(source.particleType)<0)){isValidAll.elementList.isValidSourceList=!1;break}var particleModel=null;if("object"!==_typeof(source.particle)||void 0===source.particle.gamosName){isValidAll.elementList.isValidSourceList=!1;break}if(particleModel="particles"!==source.type?_.find(particleModelList[source.type],function(p){return p.gamosName===source.particle.gamosName}):_.find(particleModelList[source.type][source.particleType],function(p){return p.gamosName===source.particle.gamosName}),"particle"===source.type){if(void 0===particleModel){isValidAll.elementList.isValidSourceList=!1;break}for(var k in particleModel)if(particleModel[k]!==source.particle[k]){isValidAll.elementList.isValidSourceList=!1;break}}else if(particleModel.particleName===source.particle.particleName&&particleModel.gamosName===source.particle.particleName&&"object"===_typeof(source.particle.parameters))for(var k in source.particle.parameters)if(source.particle.parameters[k].units!==particleModel.parameters[k].units){isValidAll.elementList.isValidSourceList=!1;break}var isValidD=validate.validateSource(source);for(var d in isValidD.isValidDistribution.errorDist){var distribution=isValidD.isValidDistribution.errorDist[d];for(var v in distribution)if(!distribution[v]){isValidAll.elementList.isValidSourceList=!1;break}}}}isValidAll.elementList.isValidSourceList||errorMessageList.push(errorList.sourceListError)}if(isValidAll.elementList.isValidData=!1,"object"===_typeof(expJSON.data)){isValidAll.elementList.isValidData=!0;var actionList=expJSON.data.actionList;if(isValidAll.elementList.isValidActions=!1,Array.isArray(actionList)){for(var isValidAction=!0,i=0;i<actionList.length;i++){var action=actionList[i];if(isValidAction=!1,void 0!==action.name&&null!==action.name&&void 0!==action.actionType&&null!=action.actionType){for(var initDataList=initDataService.getInitActionScorer(),initActionList=initDataList.actionList,find=!1,ii=0;ii<initActionList.length;ii++)if(action.actionType===initActionList[ii].type){find=!0;break}find&&Array.isArray(action.dataList)&&(isValidAction=!0)}if(!isValidAction)break}isValidAll.elementList.isValidActions=isValidAction}isValidAll.elementList.isValidScorers=!1;var scorerList=expJSON.data.scorerList;if(Array.isArray(scorerList)){for(var isValidScorer=!0,i=0;i<scorerList.length;i++){isValidScorer=!1;var scorer=scorerList[i];if(void 0!==scorer.name&&null!=scorer.name&&void 0!==scorer.volume&&null!=scorer.volume&&"object"===_typeof(scorer.data)&&(isValidScorer=!0),!isValidScorer)break}isValidAll.elementList.isValidScorers=isValidScorer}isValidAll.elementList.isValidFilters=!1;var filterList=expJSON.data.filterList;if(Array.isArray(filterList)){for(var isValidFilter=!0,i=0;i<filterList.length;i++){var filter=filterList[i];if(isValidFilter=!1,"object"===(void 0===filter?"undefined":_typeof(filter))&&void 0!==filter.name&&null!==filter.name&&(isValidFilter=!0),!isValidFilter)break}isValidAll.elementList.isValidFilters=isValidFilter}}return isValidAll.elementList.isValidData?(isValidAll.elementList.isValidActions||errorMessageList.push(errorList.actionListError),isValidAll.elementList.isValidScorers||errorMessageList.push(errorList.scorerListError),isValidAll.elementList.isValidFilters||errorMessageList.push(errorList.filterListError)):errorMessageList.push(errorList.dataError),errorMessageList.length>0&&(isValidAll.errorList=errorMessageList),isValidAll}function validateElement(element,model){var isValid=!1;if("object"===(void 0===element?"undefined":_typeof(element)))for(var k in model)if(!(isValid=_typeof(element[k])===_typeof(model[k])))break;return isValid}function validateVolumeObject(solidList,posrot,materialModelList,volume){var isValid=!0;if("object"===_typeof(volume.solid)){var solidModel=_.find(solidList,function(s){return s.solidType===volume.solid.solidType});if(void 0!==solidModel){var isValidObject=validateElement(volume.solid.dimensions,solidModel.dimensions);if(isValid=isValidObject,isValidObject){var isValidDimensions=validate.validateDimensions(volume);for(var d in isValidDimensions.dimensions)if(!isValidDimensions.dimensions[d]){isValid=!1;break}}}else isValid=!1}else isValid=!1;var isValidPosition=validateElement(volume.position,posrot.position),isValidRotation=validateElement(volume.rotation,posrot.rotation);isValid=isValid&&isValidPosition&&isValidRotation;var material=volume.material,isValidMaterial=!1,materialTypeList=_.map(materialModelList,"materialType");if("object"===(void 0===material?"undefined":_typeof(material))&&materialTypeList.indexOf(volume.materialType)>=0){var materials=_.find(materialModelList,function(mL){return mL.materialType===volume.materialType});if(void 0!==materials&&"object"===_typeof(volume.material)){void 0!==_.find(materials.materialList,function(m){return m.gamosName===volume.material.gamosName&&m.name===volume.material.name})&&(isValidMaterial=!0)}}return isValid=isValid&&isValidMaterial}return{validateExperiment:validateExperiment}}),lab.factory("buildGeom",function(){return{buildGeomCommands:function(geomJSON){function makeDimensions(solidType,dimensions){var dim;if("TUBE"===solidType){var innerRadius=dimensions["Inner radius"].value,outerRadius=dimensions["Outer radius"].value,length=dimensions.Length.value,uInnerRadius=dimensions["Inner radius"].units,uOuterRadius=dimensions["Outer radius"].units,uLength=dimensions.Length.units;dim=innerRadius+"*"+uInnerRadius+" "+outerRadius+"*"+uOuterRadius+" "+length/2+"*"+uLength}else if("TUBS"===solidType){var innerRadius=dimensions["Inner radius"].value,outerRadius=dimensions["Outer radius"].value,length=dimensions.Length.value,startPhi=dimensions["Starting phi"].value,deltaPhi=dimensions["Delta phi"].value,uInnerRadius=dimensions["Inner radius"].units,uOuterRadius=dimensions["Outer radius"].units,uLength=dimensions.Length.units,uStartPhi=dimensions["Starting phi"].units,uDeltaPhi=dimensions["Delta phi"].units;dim=innerRadius+"*"+uInnerRadius+" "+outerRadius+"*"+uOuterRadius+" "+length/2+"*"+uLength+" "+startPhi+"*"+uStartPhi+" "+deltaPhi+"*"+uDeltaPhi}else if("CONS"===solidType)var innerRadiusDown=dimensions["Inner radius down"].value,innerRadiusUp=dimensions["Inner radius up"].value,outerRadiusDown=dimensions["Outer radius down"].value,outerRadiusUp=dimensions["Outer radius up"].value,length=dimensions.Length.value,startPhi=dimensions["Starting phi"].value,deltaPhi=dimensions["Delta phi"].value,uInnerRadiusDown=dimensions["Inner radius down"].units,uIinnerRadiusUp=dimensions["Inner radius up"].units,uOuterRadiusDown=dimensions["Outer radius down"].units,uOuterRadiusUp=dimensions["Outer radius up"].units,uLength=dimensions.Length.units,uStartPhi=dimensions["Starting phi"].units,uDeltaPhi=dimensions["Delta phi"].units,dim=innerRadiusDown+"*"+uInnerRadiusDown+" "+innerRadiusUp+"*"+uIinnerRadiusUp+" "+outerRadiusDown+"*"+uOuterRadiusDown+" "+outerRadiusUp+"*"+uOuterRadiusUp+" "+length/2+"*"+uLength+" "+startPhi+"*"+uStartPhi+" "+deltaPhi+"*"+uDeltaPhi;else if("SPHERE"===solidType){var innerRadius=dimensions["Inner radius"].value,outerRadius=dimensions["Outer radius"].value,startPhi=dimensions["Starting phi"].value,deltaPhi=dimensions["Delta phi"].value,startTheta=dimensions["Starting theta"].value,deltaTheta=dimensions["Delta theta"].value,uIinnerRadius=dimensions["Inner radius"].units,uOuterRadius=dimensions["Outer radius"].units,uStartPhi=dimensions["Starting phi"].units,uDeltaPhi=dimensions["Delta phi"].units,uStartTheta=dimensions["Starting theta"].units,uDeltaTheta=dimensions["Delta theta"].units;dim=innerRadius+"*"+uIinnerRadius+" "+outerRadius+"*"+uOuterRadius+" "+startPhi+"*"+uStartPhi+" "+deltaPhi+"*"+uDeltaPhi+" "+startTheta+"*"+uStartTheta+" "+deltaTheta+"*"+uDeltaTheta}else if("BOX"===solidType){
var lengthX=dimensions["Length X"].value,lengthY=dimensions["Length Y"].value,lengthZ=dimensions["Length Z"].value,uLengthX=dimensions["Length X"].units,uLengthY=dimensions["Length Y"].units,uLengthZ=dimensions["Length Z"].units;dim=lengthX/2+"*"+uLengthX+" "+lengthY/2+"*"+uLengthY+" "+lengthZ/2+"*"+uLengthZ}else dim=null;return dim}var command,commandList=[],scinList=[],worldVolume=_.find(geomJSON,function(v){return v.isWorld});if(void 0!==worldVolume){var material=worldVolume.material.gamosName,dim=makeDimensions(worldVolume.solid.solidType,worldVolume.solid.dimensions);command=":VOLU "+worldVolume.name+" "+worldVolume.solid.solidType+" "+dim+" "+material;var volumeTitle="// "+worldVolume.name;commandList.push(volumeTitle),commandList.push(command);for(var i=0;i<geomJSON.length;i++){var volume=geomJSON[i];if("scintillator"===volume.materialType&&scinList.indexOf(volume.material.name)<0){scinList.push(volume.material.name);var scinString=function(material){var commandScin=[];commandScin.push("// Scintillator material definition");var nComponents=material.properties.components.length,commandMIXT=":MIXT "+material.gamosName+" "+material.properties.density.value+" "+nComponents;commandScin.push(commandMIXT),material.properties.components.forEach(function(c){var cString=c.gamosName+" "+c.proportion;commandScin.push(cString)});var propertiesTable="Properties_"+material.gamosName,commandMATE=":MATE_PROPERTIES_TABLE "+propertiesTable;if(commandScin.push(commandMATE),void 0!==material.properties.scintillationYield){var commandSY=":MATEPT_ADD_CONST_PROPERTY "+propertiesTable+" SCINTILLATIONYIELD "+material.properties.scintillationYield.value+material.properties.scintillationYield.units;commandScin.push(commandSY)}if(void 0!==material.properties.resolutionScale){var commandRS=":MATEPT_ADD_CONST_PROPERTY "+propertiesTable+" RESOLUTIONSCALE "+material.properties.resolutionScale.value;commandScin.push(commandRS)}if(void 0!==material.properties.fastTimeConstant){var commandFTC=":MATEPT_ADD_CONST_PROPERTY "+propertiesTable+" FASTTIMECONSTANT "+material.properties.fastTimeConstant.value+"*"+material.properties.fastTimeConstant.units;commandScin.push(commandFTC)}if(void 0!==material.properties.slowTimeConstant){var commandSLC=":MATEPT_ADD_CONST_PROPERTY "+propertiesTable+" SLOWTIMECONSTANT "+material.properties.slowTimeConstant.value+"*"+material.properties.slowTimeConstant.units;commandScin.push(commandSLC)}if(void 0!==material.properties.yieldRatio){var commandYR=":MATEPT_ADD_CONST_PROPERTY "+propertiesTable+" YIELDRATIO "+material.properties.yieldRatio.value;commandScin.push(commandYR)}if(void 0!==material.properties.fastScintillationRiseTime){var commandFSR=":MATEPT_ADD_CONST_PROPERTY "+propertiesTable+" FASTSCINTILLATIONRISETIME "+material.properties.fastScintillationRiseTime.value+"*"+material.properties.fastScintillationRiseTime.units;commandScin.push(commandFSR)}if(void 0!==material.properties.slowScintillationRiseTime){var commandSSR=":MATEPT_ADD_CONST_PROPERTY "+propertiesTable+" SLOWSCINTILLATIONRISETIME "+material.properties.slowScintillationRiseTime.value+"*"+material.properties.slowScintillationRiseTime.units;commandScin.push(commandSSR)}var commandE=":MATEPT_ADD_ENERGIES "+propertiesTable,uE=material.properties.energies.units;if(material.properties.energies.value.forEach(function(e){commandE+=" "+e+"*"+uE}),commandScin.push(commandE),void 0!==material.properties.rIndex){var commandRI=":MATEPT_ADD_PROPERTY "+propertiesTable+" RINDEX";material.properties.rIndex.value.forEach(function(ri){commandRI+=" "+ri}),commandScin.push(commandRI)}if(void 0!==material.properties.absLength){var commandABS=":MATEPT_ADD_PROPERTY "+propertiesTable+" ABSLENGTH",uABS=material.properties.absLength.units;material.properties.absLength.value.forEach(function(a){commandABS+=" "+a+"*"+uABS}),commandScin.push(commandABS)}if(void 0!==material.properties.fastComponent){var commandFC=":MATEPT_ADD_PROPERTY "+propertiesTable+" FASTCOMPONENT",uFast=material.properties.fastComponent.units;material.properties.fastComponent.value.forEach(function(f){commandFC+=" "+f+"*"+uFast}),commandScin.push(commandFC)}if(void 0!==material.properties.slowComponent){var commandSC=":MATEPT_ADD_PROPERTY "+propertiesTable+" SLOWCOMPONENT",uSlow=material.properties.slowComponent.units;material.properties.slowComponent.value.forEach(function(s){commandSC+=" "+s+"*"+uSlow}),commandScin.push(commandSC)}var attachString=":MATEPT_ATTACH_TO_MATERIAL "+propertiesTable+" "+material.gamosName;return commandScin.push(attachString),commandScin.push("// end scintillator definition"),commandScin}(volume.material);commandList=commandList.concat(scinString)}if(!volume.isWorld){var material=volume.material.gamosName,dim=makeDimensions(volume.solid.solidType,volume.solid.dimensions);command=":VOLU "+volume.name+" "+volume.solid.solidType+" "+dim+" "+material,volumeTitle="// "+volume.name,commandList.push(volumeTitle),commandList.push(command);var Rx=volume.rotation.Rx.value,Ry=volume.rotation.Ry.value,Rz=volume.rotation.Rz.value,uRx=volume.rotation.Rx.units,uRy=volume.rotation.Ry.units,uRz=volume.rotation.Rz.units,rot=":ROTM R_"+volume.name+" "+Rx+"*"+uRx+" "+Ry+"*"+uRy+" "+Rz+"*"+uRz;commandList.push(rot);var x=volume.position.X.value,y=volume.position.Y.value,z=volume.position.Z.value,uX=volume.position.X.units,uY=volume.position.Y.units,uZ=volume.position.Z.units,position=x+"*"+uX+" "+y+"*"+uY+" "+z+"*"+uZ;if(!volume.isParam||"PHANTOM"===volume.parameterisation.type){var pos=":PLACE "+volume.name+" 1 "+volume.parentVolume+" R_"+volume.name+" "+position;commandList.push(pos)}for(var color=volume.color,redString=color[1]+color[2],greenString=color[3]+color[4],blueString=color[5]+color[6],red=parseInt("0x"+redString),green=parseInt("0x"+greenString),blue=parseInt("0x"+blueString),redRGB=(red/255).toFixed(2),greenRGB=(green/255).toFixed(2),blueRGB=(blue/255).toFixed(2),colour=[redRGB,greenRGB,blueRGB],col=":COLOUR "+volume.name+" ",c=0;c<colour.length;c++)col+=colour[c]+" ";if(col+=" "+volume.opacity,commandList.push(col),volume.isParam){var paramType=volume.parameterisation.type,isLinearParam="LINEAR_X"===paramType||"LINEAR_Y"===paramType||"LINEAR_Z"===paramType,isCircleParam="CIRCLE_XY"===paramType||"CIRCLE_XZ"===paramType||"CIRCLE_YZ"===paramType;if("PHANTOM"===paramType){var ncopiesX=volume.parameterisation.parameters["N copies X"].value,ncopiesY=volume.parameterisation.parameters["N copies Y"].value,ncopiesZ=volume.parameterisation.parameters["N copies Z"].value,lengthX=volume.solid.dimensions["Length X"].value,lengthY=volume.solid.dimensions["Length Y"].value,lengthZ=volume.solid.dimensions["Length Z"].value;void 0!==ncopiesX&&null!==ncopiesX&&0!==ncopiesX||(ncopiesX=1),void 0!==ncopiesY&&null!==ncopiesY&&0!==ncopiesY||(ncopiesY=1),void 0!==ncopiesZ&&null!==ncopiesZ&&0!==ncopiesZ||(ncopiesZ=1);var stepX=lengthX/ncopiesX,stepY=lengthY/ncopiesY,stepZ=lengthZ/ncopiesZ,lengthCellX=lengthX/(2*ncopiesX),lengthCellY=lengthY/(2*ncopiesY),lengthCellZ=lengthZ/(2*ncopiesZ),uX=volume.solid.dimensions["Length X"].units,uY=volume.solid.dimensions["Length Y"].units,uZ=volume.solid.dimensions["Length Z"].units,cell="cell-"+volume.name,dimCell=lengthCellX+"*"+uX+" "+lengthCellY+"*"+uY+" "+lengthCellZ+"*"+uZ;command=":VOLU "+cell+" "+volume.solid.solidType+" "+dimCell+" "+material,commandList.push(command),command=":PLACE_PARAM "+cell+" 1 "+volume.name+" "+paramType+" "+ncopiesX+" "+ncopiesY+" "+ncopiesZ+" "+stepX+"*"+uX+" "+stepY+"*"+uY+" "+stepZ+"*"+uZ}else{var nCopies=volume.parameterisation.parameters["N copies"].value,step=volume.parameterisation.parameters.Step.value,offset=volume.parameterisation.parameters.Offset.value,uStep=volume.parameterisation.parameters.Step.units,uOffset=volume.parameterisation.parameters.Offset.units;if(isLinearParam&&(command=":PLACE_PARAM "+volume.name+" 1 "+volume.parentVolume+" "+paramType+" R_"+volume.name+" "+nCopies+" "+step+"*"+uStep+" "+offset+"*"+uOffset),isCircleParam){var uRadius=volume.parameterisation.parameters.Radius.units,radius=volume.parameterisation.parameters.Radius.value;command=":PLACE_PARAM "+volume.name+" 1 "+volume.parentVolume+" "+paramType+" R_"+volume.name+" "+nCopies+" "+step+"*"+uStep+" "+offset+"*"+uOffset+" "+radius+"*"+uRadius}}commandList.push(command)}}}}else console.log("World is undefined");return commandList}}}),lab.factory("buildMacro",function(modelSourceService){var buildHeader=function(expJSON){var generatorString,isVisualization=expJSON.isVisualization,geomFile=expJSON.geomFile,physicsLib=expJSON.physicsLib,processRemoveList=expJSON.processRemove,electricField=expJSON.emField.electric,magneticField=expJSON.emField.magnetic,localMagnetic=expJSON.localField.magnetic,isPythia=expJSON.isPythia,nBeams=expJSON.nBeams,header=[],seed1=Math.floor(1e5*Math.random()+1),seed2=Math.floor(1e5*Math.random()+1),seedStrings="/gamos/random/setSeeds "+seed1+" "+seed2,geomFileString="/gamos/setParam GmGeometryFromText:FileName "+geomFile,physicsLibString="/gamos/physicsList "+physicsLib;generatorString=isPythia?"/gamos/generator HepMCGeneratorAction":"/gamos/generator GmGenerator",header.push(seedStrings,geomFileString,"/gamos/geometry GmGeometryFromText",physicsLibString,generatorString,"/run/initialize","/gamos/analysis/fileFormat csv","/gamos/analysis/addFileFormat root");var volumeList=expJSON.geometry.volumeList;void 0!==_.find(volumeList,function(v){return"scintillator"===v.materialType})&&header.push("/gamos/physics/addPhysics opticalphoton");if(void 0!==electricField&&null!==electricField&&(0!==electricField.Ex.value||0!==electricField.Ey.value||0!==electricField.Ez.value)){header.push("#Electric field");var electricString="/gamos/field/setElecField "+electricField.Ex.value+"*"+electricField.Ex.units+" "+electricField.Ey.value+"*"+electricField.Ey.units+" "+ +electricField.Ez.value+"*"+electricField.Ez.units;header.push(electricString)}if(void 0!==magneticField&&null!==magneticField&&(0!==magneticField.Bx.value||0!==magneticField.By.value||0!==magneticField.Bz.value)){var magneticString="/gamos/field/setMagField "+magneticField.Bx.value+"*"+magneticField.Bx.units+" "+magneticField.By.value+"*"+magneticField.By.units+" "+magneticField.Bz.value+"*"+magneticField.Bz.units;header.push("#Magnetic field"),header.push(magneticString)}var isLocalField=!1;for(var field in localMagnetic)isLocalField=isLocalField||0!=localMagnetic[field].value;if(isLocalField){for(var mVolumeList=[],i=0;i<volumeList.length;i++)volumeList[i].isMagnetic&&mVolumeList.push(volumeList[i]);var localMagneticString=null;if(mVolumeList.length>0){localMagneticString="/gamos/field/setLocalMagField ";for(var field in localMagnetic)localMagneticString+=localMagnetic[field].value+"*"+localMagnetic[field].units+" ";for(var i=0;i<mVolumeList.length;i++)localMagneticString+=mVolumeList[i].name+" "}null!==localMagneticString&&(header.push("#Local magnefic field"),header.push(localMagneticString))}for(var i=0;i<processRemoveList.length;i++){var removeString="/gamos/physics/removeProcessesByName "+processRemoveList[i];header.push(removeString)}var eachNEvent=parseInt(nBeams/10);eachNEvent<=0&&(eachNEvent=1);var countSetTrackString="/gamos/setParam GmCountTracksUA:EachNEvent "+eachNEvent;if(header.push(countSetTrackString,"/gamos/userAction GmCountTracksUA","/gamos/userAction GmCountProcessesUA"),isVisualization){var wrlCommand=["#VISUALIZATION","/vis/open VRML2FILE","/vis/viewer/set/autoRefresh false","/vis/verbose errors","/vis/drawVolume","/vis/viewer/set/viewpointThetaPhi 0. 0.","/vis/viewer/zoom 1.4","/vis/scene/add/trajectories smooth","/vis/modeling/trajectories/create/drawByCharge","/vis/scene/endOfEventAction accumulate","/vis/viewer/set/autoRefresh true","/vis/verbose warnings","#END VISUALIZATION"];header=header.concat(wrlCommand)}return header.push("/gamos/physics/addPhysics decay","/gamos/physics/addPhysics radioactiveDecay"),header},buildSource=function(sourceJSON){var sourceList=modelSourceService.getParticleList(),sourceType=Object.keys(sourceList),particles=sourceList.particles,commands=(Object.keys(particles),[]),sourceName=sourceJSON.name,sourceType=sourceJSON.type,gamosName=sourceJSON.particle.gamosName,positionType=sourceJSON.distributions.Position.type,beginLine="#Source "+sourceName;commands.push(beginLine);var lineDefinition="/gamos/generator/";if("particles"===sourceType&&(lineDefinition=lineDefinition+"addSingleParticleSource "+sourceName+" "+gamosName+" 0"),"isotopes"===sourceType){var massNumber=sourceJSON.particle.parameters["Mass number"].value,excitationE=sourceJSON.particle.parameters["Excitation energy"].value,uE=sourceJSON.particle.parameters["Excitation energy"].units;gamosName+=massNumber,lineDefinition=lineDefinition+"addSingleParticleSource "+sourceName+" "+gamosName+"["+excitationE+"*"+uE+"] 0"}var energyType,directionType,timeType;if("GAMOS isotopes"===sourceType){var activity=sourceJSON.particle.parameters.activity.value;lineDefinition=lineDefinition+"addIsotopeSource "+sourceName+" "+gamosName+" "+activity+"*"+sourceJSON.particle.parameters.activity.units}else energyType=sourceJSON.distributions.Energy.type,directionType=sourceJSON.distributions.Direction.type,timeType=sourceJSON.distributions.Time.type;var energyString;if("GAMOS isotopes"===sourceType)energyString=null;else{var gamosEnergy=sourceJSON.distributions.Energy.gamosName,energyString="/gamos/generator/energyDist "+sourceName+" "+gamosEnergy+" ";switch(energyType){case"Constant energy":energyString+=sourceJSON.distributions.Energy.parameters.Energy.value+"*"+sourceJSON.distributions.Energy.parameters.Energy.units;break;case"Random flat energy":var minEnergy=sourceJSON.distributions.Energy.parameters["min. energy"].value,maxEnergy=sourceJSON.distributions.Energy.parameters["max. energy"].value;energyString+=minEnergy+"*"+sourceJSON.distributions.Energy.parameters["min. energy"].units+" "+maxEnergy+"*"+sourceJSON.distributions.Energy.parameters["max. energy"].units;break;case"Gaussian":var mean=sourceJSON.distributions.Energy.parameters.mean.value,sigma=sourceJSON.distributions.Energy.parameters.sigma.value;energyString+=mean+"*"+sourceJSON.distributions.Energy.parameters.mean.units+" "+sigma+"*"+sourceJSON.distributions.Energy.parameters.sigma.units;break;default:energyString=null}}var positionString,gamosPosition=sourceJSON.distributions.Position.gamosName,positionString="/gamos/generator/positionDist "+sourceName+" "+gamosPosition+" ";switch(positionType){case"Point":var posX=sourceJSON.distributions.Position.parameters.x.value,posY=sourceJSON.distributions.Position.parameters.y.value,posZ=sourceJSON.distributions.Position.parameters.z.value;positionString+=posX+"*"+sourceJSON.distributions.Position.parameters.x.units+" "+posY+"*"+sourceJSON.distributions.Position.parameters.y.units+" "+posZ+"*"+sourceJSON.distributions.Position.parameters.z.units;break;case"Volume":case"Volume surface":var volume=sourceJSON.distributions.Position.parameters.volume.value;positionString+=volume;break;default:positionString=null}var directionString;if("GAMOS isotopes"===sourceType)directionString=null;else{var gamosDirection=sourceJSON.distributions.Direction.gamosName,directionString="/gamos/generator/directionDist "+sourceName+" "+gamosDirection+" ";switch(directionType){case"Constant":var dirX=sourceJSON.distributions.Direction.parameters.x.value,dirY=sourceJSON.distributions.Direction.parameters.y.value,dirZ=sourceJSON.distributions.Direction.parameters.z.value;directionString+=dirX+" "+dirY+" "+dirZ;break;case"Cone":var dirX=sourceJSON.distributions.Direction.parameters.x.value,dirY=sourceJSON.distributions.Direction.parameters.y.value,dirZ=sourceJSON.distributions.Direction.parameters.z.value;directionString+=dirX+" "+dirY+" "+dirZ+" "+sourceJSON.distributions.Direction.parameters.angle.value+"*"+sourceJSON.distributions.Direction.parameters.angle.units;break;default:directionString=null}}var timeString;if("GAMOS isotopes"===sourceType)timeString=null;else{var gamosTime=sourceJSON.distributions.Time.gamosName,timeString="/gamos/generator/timeDist "+sourceName+" "+gamosTime+" ";switch(timeType){case"Constant time":timeString+=sourceJSON.distributions.Time.parameters.Time.value+"*"+sourceJSON.distributions.Time.parameters.Time.units;break;case"Time changing":var timeInterval=sourceJSON.distributions.Time.parameters["Time interval"].value,timeOffset=sourceJSON.distributions.Time.parameters["Time offset"].value;timeString+=timeInterval+"*"+sourceJSON.distributions.Time.parameters["Time interval"].units+" "+timeOffset+"*"+sourceJSON.distributions.Time.parameters["Time offset"].units;break;case"Decay time":var activity=sourceJSON.distributions.Time.parameters.Activity.value;timeString+=activity+"*"+sourceJSON.distributions.Time.parameters.Activity.units+" "+sourceJSON.distributions.Time.parameters["Life time"].value+"*"+sourceJSON.distributions.Time.parameters["Life time"].units;break;default:timeString=null}}if("defined isotope"===sourceType){var isotope=sourceJSON.gamosName;activity=sourceJSON.activity,lineDefinition="/gamos/generator/addIsotopeSource "+sourceName+" "+isotope+" "+activity+"*Bq"}return commands.push(lineDefinition),null!=energyString&&commands.push(energyString),commands.push(positionString),null!=directionString&&commands.push(directionString),null!=timeString&&commands.push(timeString),commands},buildGAMOSData=function(actionJSON){var actionName=actionJSON.name,actionType=actionJSON.actionType,commands=[];if("Stack"===actionType){for(var dataList=actionJSON.dataList,file=actionJSON.name,fileString="/GC/file/setOutFile "+file,particleString="/GC/particle/setParticle ",nBinString="/GC/histogram/setNBin ",initBinString="/GC/histogram/setInitBin ",endBinString="/GC/histogram/setEndBin ",i=0;i<dataList.length;i++){var particle=dataList[i].data[0].particle.gamosName||"geantino",nBin=dataList[i].data[0].nbins||100,initBin=dataList[i].data[0].limits[0]||0,endBin=dataList[i].data[0].limits[1]||6e3;particleString+=particle+" ",nBinString+=nBin+" ",initBinString+=initBin+" ",endBinString+=endBin+" "}commands.push("/gamos/userAction CounterStackingAction",fileString,particleString,nBinString,initBinString,endBinString)}else{var classifierName,classifierString,classifierList=actionJSON.classifierList,filterList=actionJSON.filterList,dataList=actionJSON.dataList,action="Gm"+actionType+"DataHistosUA";if(void 0!==classifierList&&null!==classifierList&&classifierList.length>0){classifierName="classifier"+actionName,classifierString="/gamos/classifier "+classifierName+" GmCompoundClassifier ";for(var i=0;i<classifierList.length;i++)classifierString=classifierString+classifierList[i].gamosName+" ";commands.push(classifierString)}for(var command="/gamos/setParam "+action,commandAction="/gamos/userAction "+action,i=0;i<filterList.length;i++)command=command+"_"+filterList[i].name,commandAction=commandAction+" "+filterList[i].name;var commandFile,commandParam;void 0!==classifierList&&null!==classifierList&&classifierList.length>0?(commandFile=command+"_"+classifierName+":FileName",commandParam=command+"_"+classifierName+":DataList"):(commandFile=command+":FileName",commandParam=command+":DataList"),commandFile=commandFile+" "+actionName;for(var command1DHisto=[],ii=0;ii<filterList.length;ii++)action=action+"_"+filterList[ii].name;for(var i=0;i<dataList.length;i++){var dimension=dataList[i].dimension;if("1D"===dimension){var data=dataList[i].data[0].gamosName;commandParam=commandParam+" "+data;var nbins=dataList[i].data[0].nbins,min=dataList[i].data[0].limits[0],max=dataList[i].data[0].limits[1],units=dataList[i].data[0].units,commandNbins="/gamos/analysis/histo1NBins "+action,commandMin="/gamos/analysis/histo1Min "+action,commandMax="/gamos/analysis/histo1Max "+action;void 0!==classifierName&&null!=classifierName?(commandNbins+="_"+classifierName+"*:"+data,commandMin+="_"+classifierName+"*:"+data,commandMax+="_"+classifierName+"*:"+data):(commandNbins+=":"+data,commandMin+=":"+data,commandMax+=":"+data),commandNbins+=" "+nbins,commandMin+=" "+min+"*"+units,commandMax+=" "+max+"*"+units,command1DHisto.push(commandNbins),command1DHisto.push(commandMin),command1DHisto.push(commandMax)}var command2DHisto=[];if("2D"===dimension){var data=dataList[i].data[0].gamosName+".vs."+dataList[i].data[1].gamosName,nbinsX=dataList[i].data[0].nbins,minX=dataList[i].data[0].limits[0],maxX=dataList[i].data[0].limits[1],unitsX=dataList[i].data[0].units,nbinsY=dataList[i].data[1].nbins,minY=dataList[i].data[1].limits[0],maxY=dataList[i].data[1].limits[1],unitsY=dataList[i].data[1].units,commandNbinsX="/gamos/analysis/histo2NBinsX "+action,commandMinX="/gamos/analysis/histo2MinX "+action,commandMaxX="/gamos/analysis/histo2MaxX "+action,commandNbinsY="/gamos/analysis/histo2NBinsY "+action,commandMinY="/gamos/analysis/histo2MinY "+action,commandMaxY="/gamos/analysis/histo2MaxY "+action;void 0!==classifierName&&null!=classifierName?(commandNbinsX+="_"+classifierName+"*:"+data,commandMinX+="_"+classifierName+"*:"+data,commandMaxX+="_"+classifierName+"*:"+data,commandNbinsY+="_"+classifierName+"*:"+data,commandMinY+="_"+classifierName+"*:"+data,commandMaxY+="_"+classifierName+"*:"+data):(commandNbinsX+=":"+data,commandMinX+=":"+data,commandMaxX+=":"+data,commandNbinsY+=":"+data,commandMinY+=":"+data,commandMaxY+=":"+data),commandNbinsX+=" "+nbinsX,commandMinX+=" "+minX+"*"+unitsX,commandMaxX+=" "+maxX+"*"+unitsX,commandNbinsY+=" "+nbinsY,commandMinY+=" "+minY+"*"+unitsY,commandMaxY+=" "+maxY+"*"+unitsY,command2DHisto=[commandNbinsX,commandMinX,commandMaxX,commandNbinsY,commandMinY,commandMaxY],commandParam=commandParam+" "+data}}null!==classifierList&&classifierList.length>0&&(commandAction=commandAction+" "+classifierName),commands.push(commandFile),commands.push(commandParam);for(var i=0;i<command1DHisto.length;i++)commands.push(command1DHisto[i]);for(var i=0;i<command2DHisto.length;i++)commands.push(command2DHisto[i]);commands.push(commandAction)}return commands},buildScorers=function(scorerList,volumeList){var volumeScorerList=[],mfdList={},macroCommand=[];return scorerList.forEach(function(scorer){var commands=[];commands.push("#"+scorer.name);var volume=scorer.volume,scorerVolume=_.find(volumeList,function(v){return v.name===volume});if(scorerVolume.isParam&&"PHANTOM"===scorerVolume.parameterisation.type&&(volume="cell-"+volume),volumeScorerList.indexOf(volume)<0){volumeScorerList.push(volume);var mfdetector="mf-"+scorer.name,mfString="/gamos/scoring/createMFDetector "+mfdetector+" "+volume;mfdList[volume]=mfdetector,commands.push(mfString)}if("GmPSSurfaceFlux"===scorer.data.gamosName){for(var direction=scorer.data.fluxType,surfaceList=scorer.data.surfaceList,directionString="/gamos/setParam "+scorer.name+":Direction "+direction,surfaceString="/gamos/setParam "+scorer.name+":Surfaces ",i=0;i<surfaceList.length;i++)surfaceString+=surfaceList[i]+" ";commands.push(directionString,surfaceString)}var addScorerMFString="/gamos/scoring/addScorer2MFD "+scorer.name+" "+scorer.data.gamosName+" "+mfdList[volume];if("GmG4PSTrackLength"!==scorer.data.gamosName&&"GmG4PSPassageTrackLength"!==scorer.data.gamosName||(addScorerMFString+=" FALSE FALSE"),commands.push(addScorerMFString),void 0!==scorer.filterList&&null!==scorer.filterList&&scorer.filterList.length>0){for(var filtersCommand=[],i=0;i<scorer.filterList.length;i++){var lineFilter="/gamos/scoring/addFilter2Scorer "+scorer.filterList[i].name+" "+scorer.name;filtersCommand.push(lineFilter)}commands=commands.concat(filtersCommand)}if(void 0!==scorer.classifierList&&null!==scorer.classifierList&&scorer.classifierList.length>0){for(var classifierName="classifier-"+scorer.name,classifierString="/gamos/classifier "+classifierName+" GmCompoundClassifier ",i=0;i<scorer.classifierList.length;i++)classifierString=classifierString+scorer.classifierList[i].gamosName+" ";commands.push(classifierString);var lineClassifier="/gamos/scoring/assignClassifier2Scorer "+classifierName+" "+scorer.name;commands.push(lineClassifier)}var printer="printer-"+scorer.name,file=scorer.name,linePrinter1="/gamos/scoring/printer "+printer+" GmPSPrinterTextFile",linePrinter2="/gamos/setParam "+printer+":FileName "+file+".out",linePrinter3="/gamos/scoring/addPrinter2Scorer "+printer+" "+scorer.name;commands.push(linePrinter1,linePrinter2,linePrinter3),macroCommand=macroCommand.concat(commands)}),macroCommand},buildFilter=function(filterJSON){for(var name=filterJSON.name,gamosName=filterJSON.gamosName,parameters=filterJSON.parameters,definitionString="/gamos/filter "+name+" "+gamosName+" ",paramString="",i=0;i<parameters.length;i++){var uString="";void 0!==parameters[i].units&&(uString="*"+parameters[i].units),paramString=paramString+parameters[i].value+uString+" "}return definitionString+=paramString};return{buildHeader:buildHeader,buildGAMOSData:buildGAMOSData,buildScorers:buildScorers,buildFilter:buildFilter,buildSource:buildSource,buildMacroFile:function(expJSON){var volumeList=expJSON.geometry.volumeList,sourceList=expJSON.sourceList,actionList=expJSON.data.actionList,scorerList=expJSON.data.scorerList,filterList=(expJSON.data.measurement,expJSON.data.filterList),isPythia=expJSON.isPythia,nBeams=expJSON.nBeams,macroArray=[],header=buildHeader(expJSON);if(macroArray=macroArray.concat(header),isPythia){var pythiaOutDataFile=expJSON.pythiaData.pythiaOutDataFile,hepMCString="/generator/hepmcAscii/open "+pythiaOutDataFile;macroArray.push("#Pythia generator event"),macroArray.push(hepMCString,"/generator/hepmcAscii/verbose 0")}else for(var i=0;i<sourceList.length;i++){var commandSource=buildSource(sourceList[i]);macroArray=macroArray.concat(commandSource)}for(var i=0;i<filterList.length;i++){var commandFilter=buildFilter(filterList[i]);macroArray.push("#Filter "+filterList[i].name),macroArray=macroArray.concat(commandFilter)}for(var i=0;i<actionList.length;i++){var commandAction=buildGAMOSData(actionList[i]);macroArray.push("#GAMOS Data "+actionList[i].name),macroArray=macroArray.concat(commandAction)}var commandScorers=buildScorers(scorerList,volumeList);macroArray=macroArray.concat(commandScorers);var nBeamsString="/run/beamOn ";return isPythia?nBeamsString+=1:(nBeams>Number.MAX_SAFE_INTEGER&&(nBeams=Number.MAX_SAFE_INTEGER-1),nBeamsString+=nBeams),macroArray.push(nBeamsString),macroArray}}});