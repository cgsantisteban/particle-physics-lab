"use strict";lab.directive("drawLaboratory",function($window){function link(scope,element){function drawScene(figureList,listSources,scene){var labRoomVolume=_.find(figureList,function(v){return v.isWorld}),labSize=100,labDimension=[];void 0!==labRoomVolume?(labDimension=[labRoomVolume.solid.dimensions["Length X"].value,labRoomVolume.solid.dimensions["Length Y"].value,labRoomVolume.solid.dimensions["Length Z"].value],labSize=Math.max.apply(null,labDimension)):labDimension=[labSize,labSize,labSize];var gridXZ=new THREE.GridHelper(labSize,10);gridXZ.position.set(0,0,0),scene.add(gridXZ);var labGeometry=new THREE.BoxGeometry(labDimension[0],labDimension[1],labDimension[2]),labMaterial=new THREE.MeshBasicMaterial({color:65280}),labObject=new THREE.Mesh(labGeometry,labMaterial),labRoom=new THREE.BoxHelper(labObject);scene.add(labRoom);var axisHelper=new THREE.AxisHelper(labSize);scene.add(axisHelper);var pX=buildText("X+",3,0,16711680);pX.position.set(.9*labDimension[0],2,0),scene.add(pX);var pY=buildText("Y+",3,0,65280);pY.position.set(2,.9*labDimension[1],0),scene.add(pY);var pZ=buildText("Z+",3,0,255);pZ.position.set(0,2,.9*labDimension[2]),scene.add(pZ);for(var i=0;i<listSources.length;i++)if("volume"!=listSources[i].tPosition){var sourceFigure=buildSource(listSources[i],labSize);scene.add(sourceFigure)}for(var i=0;i<figureList.length;i++){var figureJSON=figureList[i];if(!figureJSON.isWorld){var solidType=figureJSON.solid.solidType,positionX=figureJSON.position.X.value,positionY=figureJSON.position.Y.value,positionZ=figureJSON.position.Z.value,rotationX=figureJSON.rotation.Rx.value,rotationY=figureJSON.rotation.Ry.value,rotationZ=figureJSON.rotation.Rz.value,figure=buildFigure(figureJSON);if(figureJSON.isParam){var parentVolume=_.find(figureList,function(v){return v.name===figureJSON.parentVolume}),figureParam=null;if(void 0!==parentVolume){figureParam="PHANTOM"!=figureJSON.parameterisation.type?buildParam(figureJSON,figure,labRoom,parentVolume):rotateFigure(figure,solidType,positionX,positionY,positionZ,rotationX,rotationY,rotationZ),rotationX=parentVolume.rotation.Rx.value,rotationY=parentVolume.rotation.Ry.value,rotationZ=parentVolume.rotation.Rz.value;var figureRot=rotateFigure(figureParam,solidType,positionX,positionY,positionZ,rotationX,rotationY,rotationZ);figureRot.position.set(parentVolume.position.X.value,parentVolume.position.Y.value,parentVolume.position.Z.value),scene.add(figureRot)}}else{var figureRot=rotateFigure(figure,solidType,positionX,positionY,positionZ,rotationX,rotationY,rotationZ);scene.add(figureRot)}}}}function rotateFigure(figure,solidType,positionX,positionY,positionZ,rotationX,rotationY,rotationZ){var figureRot=figure;"BOX"===solidType?(rotationX=-rotationX*pi/180,rotationY=-rotationY*pi/180,rotationZ=-rotationZ*pi/180):"SPHERE"===solidType?(rotationX=-rotationX*pi/180,rotationY=-rotationY*pi/180,rotationZ=-rotationZ*pi/180):"CONS"===solidType||"TUBS"===solidType||"TUBE"===solidType?(rotationX=-rotationX*pi/180,rotationY=-rotationY*pi/180,rotationZ=(-rotationZ-90)*pi/180):(rotationX=-rotationX*pi/180,rotationY=-rotationY*pi/180,rotationZ=-rotationZ*pi/180);var transformations=new THREE.Matrix4,rot=new THREE.Euler(rotationX,rotationY,rotationZ,"XYZ");return transformations.makeRotationFromEuler(rot),figureRot.applyMatrix(transformations),transformations.makeTranslation(positionX,positionY,positionZ),figureRot.applyMatrix(transformations),figureRot}function clearScene(){var obj,i;for(i=scene.children.length-1;i>=0;i--)(obj=scene.children[i])!==axes&&obj!==camera&&scene.remove(obj)}function updateScene(scene,volumeList,sourceList,labSize){clearScene(),drawScene(volumeList,sourceList,scene,labSize),render()}function render(){renderer.render(scene,camera)}function buildFigure(figureJSON){var figure=new THREE.Object3D,solidType=figureJSON.solid.solidType,color=figureJSON.color,opacity=figureJSON.opacity,material=new THREE.MeshBasicMaterial({color:color,side:THREE.DoubleSide,wireframe:!1});if(material.transparent=!0,material.opacity=opacity,"TUBE"===solidType){var innerRadius=figureJSON.solid.dimensions["Inner radius"].value,outerRadius=figureJSON.solid.dimensions["Outer radius"].value,startPhi=0,deltaPhi=360,length=figureJSON.solid.dimensions.Length.value;figure=buildCone(innerRadius,innerRadius,outerRadius,outerRadius,length,startPhi,deltaPhi,material)}else if("TUBS"===solidType){var innerRadius=figureJSON.solid.dimensions["Inner radius"].value,outerRadius=figureJSON.solid.dimensions["Outer radius"].value,startPhi=figureJSON.solid.dimensions["Starting phi"].value,deltaPhi=figureJSON.solid.dimensions["Delta phi"].value,length=figureJSON.solid.dimensions.Length.value;figure=buildCone(innerRadius,innerRadius,outerRadius,outerRadius,length,startPhi,deltaPhi,material)}else if("BOX"===solidType){var lengthX=figureJSON.solid.dimensions["Length X"].value,lengthY=figureJSON.solid.dimensions["Length Y"].value,lengthZ=figureJSON.solid.dimensions["Length Z"].value;figure=buildBox(lengthX,lengthY,lengthZ,material)}else if("SPHERE"===solidType){var innerRadius=figureJSON.solid.dimensions["Inner radius"].value,outerRadius=figureJSON.solid.dimensions["Outer radius"].value,startPhi=figureJSON.solid.dimensions["Starting phi"].value,deltaPhi=figureJSON.solid.dimensions["Delta phi"].value,startTheta=figureJSON.solid.dimensions["Starting theta"].value,deltaTheta=figureJSON.solid.dimensions["Delta theta"].value;figure=buildPartialSphere(innerRadius,outerRadius,startPhi,deltaPhi,startTheta,deltaTheta,material)}else if("CONS"===solidType){var innerRadiusDown=figureJSON.solid.dimensions["Inner radius down"].value,innerRadiusUp=figureJSON.solid.dimensions["Inner radius up"].value,outerRadiusDown=figureJSON.solid.dimensions["Outer radius down"].value,outerRadiusUp=figureJSON.solid.dimensions["Outer radius up"].value,length=figureJSON.solid.dimensions.Length.value,startPhi=figureJSON.solid.dimensions["Starting phi"].value,deltaPhi=figureJSON.solid.dimensions["Delta phi"].value;figure=buildCone(innerRadiusDown,innerRadiusUp,outerRadiusDown,outerRadiusUp,length,startPhi,deltaPhi,material)}else figure=buildShape(figureJSON.dimensions.innerRadiusDown,figureJSON.dimensions.innerRadiusUp,figureJSON.dimensions.outerRadiusDown,figureJSON.dimensions.outerRadiusUp,figureJSON.dimensions.length,material);return figure.name=figureJSON.name,figure}function buildSource(source,labSize){var sourceObject=new THREE.Object3D,charge="neutral",position=[0,0,0],length=labSize/100;"isotopes"!==source.type&&"GAMOS isotopes"!==source.type&&(charge=source.particle.charge);var i=0;for(var c in source.distributions.Position.parameters)void 0!==source.distributions.Position.parameters[c].value&&(position[i]=source.distributions.Position.parameters[c].value),i++;var color=65280;switch(charge){case"neutral":color=65280;break;case"positive":color=255;break;case"negative":color=16711680;break;default:color=65280}var directionType;directionType="GAMOS isotopes"===source.type?"Random":source.distributions.Direction.type;var orig=new THREE.Vector3(position[0],position[1],position[2]),dx=1,dy=1,dz=1;if("Random"===directionType)for(var dir=[new THREE.Vector3(dx,0,0).normalize(),new THREE.Vector3(-dx,0,0).normalize(),new THREE.Vector3(0,dy,0).normalize(),new THREE.Vector3(0,-dy,0).normalize(),new THREE.Vector3(0,0,dz).normalize(),new THREE.Vector3(0,0,-dz).normalize(),new THREE.Vector3(dx,dy,dz).normalize(),new THREE.Vector3(-dx,dy,dz).normalize(),new THREE.Vector3(-dx,dy,-dz).normalize(),new THREE.Vector3(dx,-dy,-dz).normalize(),new THREE.Vector3(dx,-dy,dz).normalize(),new THREE.Vector3(dx,dy,-dz).normalize(),new THREE.Vector3(-dx,-dy,dz).normalize(),new THREE.Vector3(-dx,-dy,-dz).normalize()],i=0;i<dir.length;i++){var arrowSource=new THREE.ArrowHelper(dir[i],orig,length,color);sourceObject.add(arrowSource)}if("Constant"===directionType||"Cone"===directionType){void 0!==source.distributions.Direction.parameters&&(dx=source.distributions.Direction.parameters.x.value,dy=source.distributions.Direction.parameters.y.value,dz=source.distributions.Direction.parameters.z.value);var dirData=new THREE.Vector3(dx,dy,dz),dir=dirData.normalize(),arrowSource=new THREE.ArrowHelper(dir,orig,length,color);sourceObject.add(arrowSource)}return sourceObject}function buildText(text,size,height,color){var textGeom=new THREE.TextGeometry(text,{size:size,height:height}),mesh_text=new THREE.MeshBasicMaterial({color:color});return new THREE.Mesh(textGeom,mesh_text)}function buildParam(figureJSON,figureTHREE,labRoom,parentVolume){var radius,paramType=figureJSON.parameterisation.type,paramObject=new THREE.Object3D,nCopies=figureJSON.parameterisation.parameters["N copies"].value,step=figureJSON.parameterisation.parameters.Step.value,offset=figureJSON.parameterisation.parameters.Offset.value,pi=Math.PI;"CIRCLE_XY"!==paramType&&"CIRCLE_XZ"!==paramType&&"CIRCLE_YZ"!==paramType||(radius=figureJSON.parameterisation.parameters.Radius.value);for(var rotationX=((new THREE.Box3).setFromObject(labRoom),figureJSON.rotation.Rx.value*pi/180),rotationY=figureJSON.rotation.Ry.value*pi/180,rotationZ=figureJSON.rotation.Rz.value*pi/180,i=0;i<nCopies;i++){var newVolume=figureTHREE.clone(),positionX=0,positionY=0,positionZ=0,rotPar=(step*i+offset)*pi/180;"CIRCLE_XY"===paramType&&(positionX=radius*Math.cos((step*i+offset)*pi/180),positionY=radius*Math.sin((step*i+offset)*pi/180),newVolume.rotation.set(rotationX,rotationY,rotationZ+rotPar)),"CIRCLE_XZ"===paramType&&(positionX=radius*Math.cos((step*i+offset)*pi/180),positionZ=radius*Math.sin(-(step*i+offset)*pi/180),newVolume.rotation.set(rotationX,rotationY+rotPar,rotationZ)),"CIRCLE_YZ"===paramType&&(positionY=radius*Math.sin(-(step*i+offset-90)*pi/180),positionZ=radius*Math.cos((step*i+offset-90)*pi/180),newVolume.rotation.set(rotationX+rotPar,rotationY,rotationZ)),"LINEAR_X"===paramType&&(positionX=offset+i*step,newVolume.rotation.set(rotationX,rotationY,rotationZ)),"LINEAR_Y"===paramType&&(positionY=offset+i*step,newVolume.rotation.set(rotationX,rotationY,rotationZ)),"LINEAR_Z"===paramType&&(positionZ=offset+i*step,newVolume.rotation.set(rotationX,rotationY,rotationZ)),newVolume.position.set(positionX,positionY,positionZ),paramObject.add(newVolume)}return paramObject}function buildRing(innerRadius,outerRadius,phiStart,phiLength){var ringShape=new THREE.Shape;if(phiLength<360)phiStart=phiStart*Math.PI/180,phiLength=phiLength*Math.PI/180,0!==innerRadius?ringShape.moveTo(innerRadius*Math.cos(phiStart+phiLength),innerRadius*Math.sin(phiStart+phiLength)):ringShape.moveTo(0,0),ringShape.lineTo(outerRadius*Math.cos(phiStart+phiLength),outerRadius*Math.sin(phiStart+phiLength)),ringShape.absarc(0,0,outerRadius,phiStart+phiLength,phiStart,!0),0!==innerRadius?(ringShape.lineTo(innerRadius*Math.cos(phiStart),innerRadius*Math.sin(phiStart)),ringShape.absarc(0,0,innerRadius,phiStart,phiStart+phiLength,!0)):ringShape.lineTo(0,0);else if(ringShape.absarc(0,0,outerRadius,0,2*Math.PI,!0),0!==innerRadius){var innerRing=new THREE.Path;innerRing.absarc(0,0,innerRadius,0,2*Math.PI,!0),ringShape.holes.push(innerRing)}return ringShape}function buildPartialSphere(innerRadius,outerRadius,phiStart,phiLength,thetaStart,thetaLength,material){var partialSphere;if(0===phiStart&&phiLength>=360&&0===thetaStart&&thetaLength>=180){var geometry=new THREE.SphereGeometry(outerRadius,16,16);partialSphere=new THREE.Mesh(geometry,material)}else{partialSphere=new THREE.Object3D;var materialFaces=material,pi=Math.PI,innerPoints=[],outerPoints=[];thetaStart+thetaLength>180&&(thetaLength=180-thetaStart);for(var i=thetaStart-90;i<=thetaStart+thetaLength-90;i+=2)innerRadius>0&&innerPoints.push(new THREE.Vector3(0,innerRadius*Math.cos(-i*pi/180),innerRadius*Math.sin(-i*pi/180))),outerPoints.push(new THREE.Vector3(0,outerRadius*Math.cos(-i*pi/180),outerRadius*Math.sin(-i*pi/180)));var innerSphereGeometry,outerSphereGeometry,innerSphere,outerSphere,materialInner;innerRadius>0&&(innerSphereGeometry=new THREE.LatheGeometry(innerPoints,24,(phiStart-90)*pi/180,phiLength*pi/180),materialInner=material,innerSphere=new THREE.Mesh(innerSphereGeometry,materialInner),partialSphere.add(innerSphere)),outerSphereGeometry=new THREE.LatheGeometry(outerPoints,24,(phiStart-90)*pi/180,phiLength*pi/180),outerSphere=new THREE.Mesh(outerSphereGeometry,material),partialSphere.add(outerSphere);for(var pointsCone1=[],pointsCone2=[],dh=(outerRadius-innerRadius)/30,i=0;i<=30;i++)pointsCone1.push(new THREE.Vector3(0,(innerRadius+dh*i)*Math.cos(-(thetaStart+thetaLength-90-0)*pi/180),(innerRadius+dh*i)*Math.sin(-(thetaStart+thetaLength-90-1)*pi/180))),pointsCone2.push(new THREE.Vector3(0,(innerRadius+dh*i)*Math.cos(-(thetaStart-90)*pi/180),(innerRadius+dh*i)*Math.sin(-(thetaStart-90)*pi/180)));var coneGeometry1=new THREE.LatheGeometry(pointsCone1,24,(phiStart-90)*pi/180,phiLength*pi/180),coneMesh1=new THREE.Mesh(coneGeometry1,materialFaces),coneGeometry2=new THREE.LatheGeometry(pointsCone2,24,(phiStart-90)*pi/180,phiLength*pi/180),coneMesh2=new THREE.Mesh(coneGeometry2,materialFaces);if(partialSphere.add(coneMesh1),partialSphere.add(coneMesh2),phiLength<360){materialFaces=material;var faceShape=buildRing(innerRadius,outerRadius,thetaStart,thetaLength),faceGeometry=new THREE.ShapeGeometry(faceShape),face1=new THREE.Mesh(faceGeometry,materialFaces),ry=-90*pi/180,rz=0,transformations=new THREE.Matrix4,rot=new THREE.Euler(0,ry,rz,"XYZ");transformations.makeRotationFromEuler(rot),face1.applyMatrix(transformations);var faceClone1=face1.clone();ry=0,rz=-(90-phiStart)*pi/180,rot=new THREE.Euler(0,ry,rz,"XYZ"),transformations.makeRotationFromEuler(rot),faceClone1.applyMatrix(transformations);var faceClone2=face1.clone();rz=-(90-phiStart-phiLength)*pi/180,rot=new THREE.Euler(0,ry,rz,"XYZ"),transformations.makeRotationFromEuler(rot),faceClone2.applyMatrix(transformations),partialSphere.add(faceClone1),partialSphere.add(faceClone2)}}return partialSphere}function buildBox(lengthX,lengthY,lengthZ,material){var geometry=new THREE.BoxGeometry(lengthX,lengthY,lengthZ);return new THREE.Mesh(geometry,material)}function buildCone(innerRadiusDown,innerRadiusUp,outerRadiusDown,outerRadiusUp,length,phiStart,phiLength,material){for(var coneObject=new THREE.Object3D,pointsConeInner=[],pointsConeOuter=[],degtorad=Math.PI/180,dhInner=(innerRadiusUp-innerRadiusDown)/30,dhOuter=(outerRadiusUp-outerRadiusDown)/30,i=0;i<=30;i++){if(innerRadiusUp===innerRadiusDown)var yInner=innerRadiusUp,zInner=-length/2+length*i/30;else var mInner=length/(innerRadiusUp-innerRadiusDown),yInner=innerRadiusDown+dhInner*i,bInner=-length/2-mInner*innerRadiusDown,zInner=mInner*yInner+bInner;if(outerRadiusUp===outerRadiusDown)var yOuter=outerRadiusUp,zOuter=-length/2+length*i/30;else var mOuter=length/(outerRadiusUp-outerRadiusDown),yOuter=outerRadiusDown+dhOuter*i,bOuter=-length/2-mOuter*outerRadiusDown,zOuter=mOuter*yOuter+bOuter;pointsConeInner.push(new THREE.Vector3(0,yInner,zInner)),pointsConeOuter.push(new THREE.Vector3(0,yOuter,zOuter))}var coneGeometryInner=new THREE.LatheGeometry(pointsConeInner,24,phiStart*degtorad,phiLength*degtorad),coneMeshInner=new THREE.Mesh(coneGeometryInner,material),coneGeometryOuter=new THREE.LatheGeometry(pointsConeOuter,24,phiStart*degtorad,phiLength*degtorad),coneMeshOuter=new THREE.Mesh(coneGeometryOuter,material);coneObject.add(coneMeshInner),coneObject.add(coneMeshOuter);var faceShapeUp=buildRing(innerRadiusUp,outerRadiusUp,phiStart,phiLength),faceGeometryUp=new THREE.ShapeGeometry(faceShapeUp),faceUp=new THREE.Mesh(faceGeometryUp,material);if(faceUp.position.set(0,0,length/2),faceUp.rotation.set(0,0,90*degtorad),coneObject.add(faceUp),outerRadiusDown>0){var faceShapeDown=buildRing(innerRadiusDown,outerRadiusDown,phiStart,phiLength),faceGeometryDown=new THREE.ShapeGeometry(faceShapeDown),faceDown=new THREE.Mesh(faceGeometryDown,material);faceDown.position.set(0,0,-length/2),faceDown.rotation.set(0,0,90*degtorad),coneObject.add(faceDown)}if(phiLength<360){var lShape=new THREE.Shape;lShape.moveTo(innerRadiusDown,0),lShape.lineTo(innerRadiusUp,length),lShape.lineTo(outerRadiusUp,length),innerRadiusDown!==outerRadiusDown&&lShape.lineTo(outerRadiusDown,0),lShape.lineTo(innerRadiusDown,0);var lGeom=new THREE.ShapeGeometry(lShape),lMesh=new THREE.Mesh(lGeom,material),lMesh1=lMesh.clone();lMesh.position.set(0,0,-length/2),lMesh1.position.set(0,0,-length/2),lMesh.rotation.set(90*degtorad,(90+phiStart)*degtorad,0),lMesh1.rotation.set(90*degtorad,(90+phiStart+phiLength)*degtorad,0),coneObject.add(lMesh),coneObject.add(lMesh1)}return coneObject}var container,camera,scene,renderer,controls,axes,pi=Math.PI,widthContainer=element[0].clientWidth,heightContainer=.6*widthContainer,labRoomVolume=_.find(scope.volumelist,function(v){return v.isWorld}),labSize=100,labDimension=[];void 0!==labRoomVolume?(labDimension=[labRoomVolume.solid.dimensions["Length X"].value,labRoomVolume.solid.dimensions["Length Y"].value,labRoomVolume.solid.dimensions["Length Z"].value],labSize=Math.max.apply(null,labDimension)):labDimension=[labSize,labSize,labSize],function(labSize,widthContainer,heightConatainer){camera=new THREE.PerspectiveCamera(100,widthContainer/heightContainer,1,1e3),camera.position.x=labSize,camera.position.y=labSize,camera.position.z=labSize,container=element[0],scene=new THREE.Scene,scene.fog=new THREE.FogExp2(16777215,.002),renderer=Detector.webgl?new THREE.WebGLRenderer:new THREE.CanvasRenderer,renderer.setClearColor(scene.fog.color,1);var SCREEN_WIDTH=1*widthContainer,SCREEN_HEIGHT=1*heightContainer;renderer.setSize(SCREEN_WIDTH,SCREEN_HEIGHT),container.appendChild(renderer.domElement),controls=new THREE.OrbitControls(camera,container),controls.addEventListener("change",render)}(labSize,widthContainer),render(),new ResizeSensor(element[0],function(){widthContainer=element[0].clientWidth,heightContainer=.6*widthContainer;var SCREEN_WIDTH=1*widthContainer,SCREEN_HEIGHT=1*heightContainer;renderer.setSize(SCREEN_WIDTH,SCREEN_HEIGHT),clearScene(),drawScene(scope.volumelist,scope.sourcelist,scene),render()}),scope.$watch("[volumelist,isvalidvolumes]",function(newValues,oldValues){var volumeList=newValues[0];newValues[1];volumeList.length>0&&updateScene(scene,volumeList,scope.sourcelist,labSize)},!0),scope.$watch("sourcelist",function(newSourceList,oldSourceList){newSourceList&&(clearScene(),drawScene(scope.volumelist,newSourceList,scene),render())},!0)}return{link:link,restrict:"AE",scope:{volumelist:"=",sourcelist:"=",isvalidvolumes:"="}}});